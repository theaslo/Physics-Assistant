apiVersion: apps/v1
kind: Deployment
metadata:
  name: ml-engine
  namespace: physics-assistant
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ml-engine
  template:
    metadata:
      labels:
        app: ml-engine
    spec:
      imagePullSecrets:
      - name: container-registry-secret
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        fsGroup: 1001
      containers:
      - name: ml-engine
        image: physics-assistant/ml-engine:latest
        ports:
        - containerPort: 8003
        env:
        - name: DATABASE_API_HOST
          value: "database-api-service"
        - name: DATABASE_API_PORT
          value: "8001"
        - name: REDIS_HOST
          value: "redis-service"
        - name: REDIS_PORT
          value: "6379"
        envFrom:
        - configMapRef:
            name: physics-assistant-config
        - secretRef:
            name: physics-assistant-secrets
        volumeMounts:
        - name: ml-models-storage
          mountPath: /app/models
        resources:
          requests:
            cpu: 1
            memory: 2Gi
          limits:
            cpu: 4
            memory: 8Gi
        livenessProbe:
          httpGet:
            path: /health
            port: 8003
          initialDelaySeconds: 120
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /health
            port: 8003
          initialDelaySeconds: 60
          periodSeconds: 10
      volumes:
      - name: ml-models-storage
        persistentVolumeClaim:
          claimName: ml-models-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: ml-engine-service
  namespace: physics-assistant
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8003"
    prometheus.io/path: "/metrics"
spec:
  selector:
    app: ml-engine
  ports:
  - port: 8003
    targetPort: 8003
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: task-processor
  namespace: physics-assistant
spec:
  replicas: 2
  selector:
    matchLabels:
      app: task-processor
  template:
    metadata:
      labels:
        app: task-processor
    spec:
      imagePullSecrets:
      - name: container-registry-secret
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        fsGroup: 1001
      containers:
      - name: task-processor
        image: physics-assistant/task-processor:latest
        env:
        - name: CELERY_BROKER_URL
          value: "redis://redis-service:6379/0"
        - name: CELERY_RESULT_BACKEND
          value: "redis://redis-service:6379/0"
        - name: DATABASE_API_HOST
          value: "database-api-service"
        - name: DATABASE_API_PORT
          value: "8001"
        - name: REDIS_HOST
          value: "redis-service"
        - name: REDIS_PORT
          value: "6379"
        envFrom:
        - configMapRef:
            name: physics-assistant-config
        resources:
          requests:
            cpu: 500m
            memory: 1Gi
          limits:
            cpu: 2
            memory: 4Gi
        livenessProbe:
          exec:
            command:
            - celery
            - -A
            - analytics.tasks
            - status
          initialDelaySeconds: 60
          periodSeconds: 30
        readinessProbe:
          exec:
            command:
            - celery
            - -A
            - analytics.tasks
            - status
          initialDelaySeconds: 30
          periodSeconds: 10
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: flower-monitor
  namespace: physics-assistant
spec:
  replicas: 1
  selector:
    matchLabels:
      app: flower-monitor
  template:
    metadata:
      labels:
        app: flower-monitor
    spec:
      imagePullSecrets:
      - name: container-registry-secret
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        fsGroup: 1001
      containers:
      - name: flower-monitor
        image: physics-assistant/flower-monitor:latest
        ports:
        - containerPort: 5555
        env:
        - name: CELERY_BROKER_URL
          value: "redis://redis-service:6379/0"
        - name: REDIS_HOST
          value: "redis-service"
        - name: REDIS_PORT
          value: "6379"
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 500m
            memory: 512Mi
        livenessProbe:
          httpGet:
            path: /
            port: 5555
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: 5555
          initialDelaySeconds: 10
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: flower-monitor-service
  namespace: physics-assistant
spec:
  selector:
    app: flower-monitor
  ports:
  - port: 5555
    targetPort: 5555