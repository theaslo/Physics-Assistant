global:
  # Global configuration for alertmanager
  smtp_smarthost: 'localhost:587'
  smtp_from: 'physics-assistant@university.edu'

# Templates for alert notifications
templates:
  - '/etc/alertmanager/templates/*.tmpl'

# Routing configuration
route:
  # Default receiver for all alerts
  receiver: 'default-receiver'
  # Group by alert name and cluster
  group_by: ['alertname', 'cluster', 'service']
  # Wait time before sending notification for a group of alerts
  group_wait: 30s
  # Wait time before sending notification for new alerts in existing group
  group_interval: 5m
  # Wait time before sending notification for resolved alerts
  repeat_interval: 12h

  # Specific routes for different alert types
  routes:
  - match:
      severity: critical
    receiver: 'critical-alerts'
    group_wait: 10s
    repeat_interval: 1h

  - match:
      severity: warning  
    receiver: 'warning-alerts'
    group_wait: 30s
    repeat_interval: 4h

  - match_re:
      service: ^(database|postgres|neo4j|redis)$
    receiver: 'database-team'
    group_wait: 20s
    repeat_interval: 2h

# Alert receivers configuration
receivers:
- name: 'default-receiver'
  webhook_configs:
  - url: 'http://localhost:9093/api/v1/alerts'
    send_resolved: true

- name: 'critical-alerts'
  email_configs:
  - to: 'admin@university.edu'
    subject: 'üö® CRITICAL: Physics Assistant Alert - {{ .GroupLabels.alertname }}'
    body: |
      Alert: {{ .GroupLabels.alertname }}
      Severity: {{ .CommonLabels.severity }}
      
      {{ range .Alerts }}
      Description: {{ .Annotations.description }}
      Summary: {{ .Annotations.summary }}
      Instance: {{ .Labels.instance }}
      Job: {{ .Labels.job }}
      
      Started: {{ .StartsAt.Format "2006-01-02 15:04:05" }}
      {{ if .EndsAt }}Ended: {{ .EndsAt.Format "2006-01-02 15:04:05" }}{{ end }}
      {{ end }}
      
      Dashboard: http://localhost:3000/
      Prometheus: http://localhost:9090/

  slack_configs:
  - api_url: 'https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK'
    channel: '#physics-assistant-alerts'
    title: 'üö® Critical Alert: {{ .GroupLabels.alertname }}'
    text: |
      *Severity:* {{ .CommonLabels.severity }}
      {{ range .Alerts }}
      *Description:* {{ .Annotations.description }}
      *Instance:* {{ .Labels.instance }}
      {{ end }}

- name: 'warning-alerts'
  email_configs:
  - to: 'monitoring@university.edu'
    subject: '‚ö†Ô∏è WARNING: Physics Assistant Alert - {{ .GroupLabels.alertname }}'
    body: |
      Alert: {{ .GroupLabels.alertname }}
      Severity: {{ .CommonLabels.severity }}
      
      {{ range .Alerts }}
      Description: {{ .Annotations.description }}
      Summary: {{ .Annotations.summary }}
      Instance: {{ .Labels.instance }}
      Job: {{ .Labels.job }}
      {{ end }}
      
      Dashboard: http://localhost:3000/

- name: 'database-team'
  email_configs:
  - to: 'database-team@university.edu'
    subject: 'üíæ DATABASE: Physics Assistant Alert - {{ .GroupLabels.alertname }}'
    body: |
      Database Alert: {{ .GroupLabels.alertname }}
      
      {{ range .Alerts }}
      Service: {{ .Labels.job }}
      Description: {{ .Annotations.description }}
      Instance: {{ .Labels.instance }}
      {{ end }}
      
      Database Health Dashboard: http://localhost:3000/d/database-health

# Inhibition rules (suppress alerts based on other active alerts)
inhibit_rules:
- source_match:
    severity: 'critical'
  target_match:
    severity: 'warning'
  equal: ['alertname', 'instance']

- source_match:
    alertname: 'DatabaseAPIDown'
  target_match_re:
    alertname: '^(HighResponseTime|HighErrorRate)$'