# Physics Assistant Production Nginx Configuration
# High Availability Load Balancer with SSL/TLS Termination

# Upstream configurations with health checks and load balancing
upstream streamlit_backend {
    least_conn;  # Load balancing method
    server streamlit-ui-1:8501 max_fails=3 fail_timeout=30s weight=1;
    server streamlit-ui-2:8501 max_fails=3 fail_timeout=30s weight=1;
    keepalive 32;
    keepalive_requests 100;
    keepalive_timeout 60s;
}

upstream physics_api_backend {
    least_conn;
    server physics-agents-api-1:8000 max_fails=3 fail_timeout=30s weight=1;
    server physics-agents-api-2:8000 max_fails=3 fail_timeout=30s weight=1;
    keepalive 16;
    keepalive_requests 100;
    keepalive_timeout 60s;
}

upstream database_api_backend {
    least_conn;
    server database-api-1:8001 max_fails=3 fail_timeout=30s weight=1;
    server database-api-2:8001 max_fails=3 fail_timeout=30s weight=1;
    keepalive 16;
    keepalive_requests 100;
    keepalive_timeout 60s;
}

upstream dashboard_api_backend {
    server dashboard-api:8002 max_fails=3 fail_timeout=30s;
    keepalive 8;
    keepalive_requests 100;
    keepalive_timeout 60s;
}

upstream dashboard_backend {
    server react-dashboard:80 max_fails=3 fail_timeout=30s;
    keepalive 8;
    keepalive_requests 100;
    keepalive_timeout 60s;
}

upstream monitoring_backend {
    server grafana:3000 max_fails=2 fail_timeout=30s;
    keepalive 4;
}

upstream prometheus_backend {
    server prometheus:9090 max_fails=2 fail_timeout=30s;
    keepalive 4;
}

upstream alertmanager_backend {
    server alertmanager:9093 max_fails=2 fail_timeout=30s;
    keepalive 4;
}

# Rate limiting zones
limit_req_zone $binary_remote_addr zone=api:10m rate=100r/m;
limit_req_zone $binary_remote_addr zone=auth:10m rate=10r/m;
limit_req_zone $binary_remote_addr zone=dashboard:10m rate=60r/m;
limit_req_zone $binary_remote_addr zone=upload:10m rate=5r/m;
limit_req_zone $binary_remote_addr zone=monitoring:10m rate=30r/m;

# Connection limiting zones
limit_conn_zone $binary_remote_addr zone=perip:10m;
limit_conn_zone $server_name zone=perserver:10m;

# Geo-blocking for production security (customize as needed)
geo $blocked_country {
    default 0;
    # Add countries to block if needed
    # CN 1;  # Example: block China
}

# Map for real IP detection
map $http_x_forwarded_for $real_ip {
    ~^(\d+\.\d+\.\d+\.\d+) $1;
    default $remote_addr;
}

# SSL Configuration
ssl_protocols TLSv1.2 TLSv1.3;
ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
ssl_prefer_server_ciphers off;
ssl_session_cache shared:SSL:50m;
ssl_session_timeout 1d;
ssl_session_tickets off;
ssl_stapling on;
ssl_stapling_verify on;
ssl_buffer_size 8k;

# Security headers map
map $sent_http_content_type $csp_header {
    default "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://cdn.jsdelivr.net https://cdnjs.cloudflare.com; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; img-src 'self' data: https: blob:; font-src 'self' https://fonts.gstatic.com; connect-src 'self' ws: wss: https:; media-src 'self' blob:; object-src 'none'; frame-ancestors 'self'; base-uri 'self'; form-action 'self';";
    ~text/html "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://cdn.jsdelivr.net https://cdnjs.cloudflare.com; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; img-src 'self' data: https: blob:; font-src 'self' https://fonts.gstatic.com; connect-src 'self' ws: wss: https:; media-src 'self' blob:; object-src 'none'; frame-ancestors 'self'; base-uri 'self'; form-action 'self';";
}

# HTTP to HTTPS redirect server
server {
    listen 80 default_server;
    listen [::]:80 default_server;
    server_name _;
    server_tokens off;
    
    # Security check for blocked countries
    if ($blocked_country) {
        return 403 "Access denied from your location";
    }
    
    # Let's Encrypt ACME challenge
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
        try_files $uri =404;
        access_log off;
        log_not_found off;
    }
    
    # Health check for load balancer
    location /health {
        access_log off;
        return 200 "Physics Assistant Gateway - HTTP Redirect Active\n";
        add_header Content-Type text/plain;
    }
    
    # Redirect all other traffic to HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

# Main HTTPS server - Primary application
server {
    listen 443 ssl http2 default_server;
    listen [::]:443 ssl http2 default_server;
    server_name ${DOMAIN_NAME} www.${DOMAIN_NAME};
    server_tokens off;
    
    # Security check for blocked countries
    if ($blocked_country) {
        return 403 "Access denied from your location";
    }
    
    # SSL Certificate configuration
    ssl_certificate /etc/nginx/ssl/live/${DOMAIN_NAME}/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/live/${DOMAIN_NAME}/privkey.pem;
    ssl_trusted_certificate /etc/nginx/ssl/live/${DOMAIN_NAME}/chain.pem;
    
    # OCSP Stapling
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;
    
    # Security headers
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy $csp_header always;
    add_header Permissions-Policy "camera=(), microphone=(), geolocation=(), gyroscope=(), magnetometer=(), payment=(), usb=()" always;
    add_header X-Robots-Tag "noindex, nofollow" always;
    
    # Connection and request limiting
    limit_conn perip 20;
    limit_conn perserver 2000;
    
    # Client settings
    client_max_body_size 100M;
    client_body_buffer_size 128k;
    client_header_buffer_size 3m;
    large_client_header_buffers 4 256k;
    client_body_timeout 60s;
    client_header_timeout 60s;
    keepalive_timeout 65s;
    keepalive_requests 1000;
    
    # Compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;
    
    # Main Streamlit UI (Physics Assistant Interface)
    location / {
        limit_req zone=api burst=100 nodelay;
        
        # Security headers for UI
        add_header X-Frame-Options SAMEORIGIN always;
        
        proxy_pass http://streamlit_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $real_ip;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        
        # WebSocket support for Streamlit real-time features
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_read_timeout 3600s;
        proxy_send_timeout 3600s;
        proxy_cache_bypass $http_upgrade;
        
        # Buffering and timeouts
        proxy_buffering on;
        proxy_buffer_size 128k;
        proxy_buffers 4 256k;
        proxy_busy_buffers_size 256k;
        proxy_connect_timeout 60s;
        
        # Health check and failover
        proxy_next_upstream error timeout invalid_header http_502 http_503 http_504;
        proxy_next_upstream_tries 3;
        proxy_next_upstream_timeout 30s;
    }
    
    # Analytics Dashboard (React App)
    location /dashboard/ {
        limit_req zone=dashboard burst=60 nodelay;
        
        proxy_pass http://dashboard_backend/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $real_ip;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        
        # WebSocket support for real-time dashboard updates
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_cache_bypass $http_upgrade;
        
        # Dashboard-specific timeouts
        proxy_connect_timeout 30s;
        proxy_send_timeout 120s;
        proxy_read_timeout 120s;
        
        # Health check and failover
        proxy_next_upstream error timeout http_502 http_503 http_504;
        proxy_next_upstream_tries 2;
        proxy_next_upstream_timeout 15s;
    }
    
    # Physics Agents API (AI Processing with extended timeouts)
    location /api/agents/ {
        limit_req zone=api burst=50 nodelay;
        
        proxy_pass http://physics_api_backend/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $real_ip;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        
        # Extended timeouts for AI processing
        proxy_connect_timeout 60s;
        proxy_send_timeout 600s;  # 10 minutes for complex calculations
        proxy_read_timeout 600s;
        
        # Large request support for file uploads and complex data
        proxy_request_buffering on;
        proxy_buffering on;
        proxy_buffer_size 256k;
        proxy_buffers 8 256k;
        proxy_busy_buffers_size 512k;
        
        # Health check and failover with longer timeout
        proxy_next_upstream error timeout http_502 http_503 http_504;
        proxy_next_upstream_tries 3;
        proxy_next_upstream_timeout 60s;
    }
    
    # Database API (High availability with fast failover)
    location /api/database/ {
        limit_req zone=api burst=80 nodelay;
        
        proxy_pass http://database_api_backend/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $real_ip;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        
        # Database operation timeouts
        proxy_connect_timeout 30s;
        proxy_send_timeout 120s;
        proxy_read_timeout 120s;
        
        # Optimized buffering for database responses
        proxy_buffering on;
        proxy_buffer_size 128k;
        proxy_buffers 4 128k;
        
        # Fast failover for high availability
        proxy_next_upstream error timeout http_502 http_503 http_504;
        proxy_next_upstream_tries 3;
        proxy_next_upstream_timeout 10s;
    }
    
    # Dashboard API (Analytics and monitoring)
    location /api/dashboard/ {
        limit_req zone=dashboard burst=60 nodelay;
        
        proxy_pass http://dashboard_api_backend/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $real_ip;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        
        # WebSocket support for real-time analytics
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_cache_bypass $http_upgrade;
        
        # Analytics processing timeouts
        proxy_connect_timeout 30s;
        proxy_send_timeout 180s;
        proxy_read_timeout 180s;
        
        # Health check
        proxy_next_upstream error timeout http_502 http_503 http_504;
        proxy_next_upstream_tries 2;
        proxy_next_upstream_timeout 15s;
    }
    
    # File upload endpoint (Special handling for large files)
    location /api/upload/ {
        limit_req zone=upload burst=10 nodelay;
        client_max_body_size 500M;
        client_body_timeout 300s;
        client_body_buffer_size 1M;
        
        proxy_pass http://physics_api_backend/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $real_ip;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Upload-specific timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;
        
        # Disable buffering for large uploads
        proxy_request_buffering off;
        proxy_buffering off;
        
        # Health check
        proxy_next_upstream error timeout http_502 http_503 http_504;
        proxy_next_upstream_tries 2;
        proxy_next_upstream_timeout 30s;
    }
    
    # Authentication endpoints (Enhanced security)
    location ~ ^/api/(login|register|auth|logout)/ {
        limit_req zone=auth burst=15 nodelay;
        limit_conn perip 5;
        
        proxy_pass http://physics_api_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $real_ip;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Strict timeouts for auth endpoints
        proxy_connect_timeout 30s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # Enhanced security headers for authentication
        add_header X-Frame-Options DENY always;
        add_header X-Content-Type-Options nosniff always;
        add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0" always;
        add_header Pragma "no-cache" always;
    }
    
    # Static assets with aggressive caching
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot|webp|avif)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Vary "Accept-Encoding";
        access_log off;
        
        # Try to serve static files, fallback to backend
        try_files $uri @backend_static;
    }
    
    # Fallback for static files not found locally
    location @backend_static {
        proxy_pass http://streamlit_backend;
        proxy_set_header Host $host;
        proxy_cache_valid 200 1d;
        expires 1d;
        add_header Cache-Control "public";
    }
    
    # Health check endpoint
    location /health {
        access_log off;
        return 200 "Physics Assistant Gateway - Production Ready\n";
        add_header Content-Type text/plain;
        add_header Cache-Control "no-cache";
    }
    
    # Nginx status endpoint for monitoring
    location /nginx-status {
        stub_status on;
        access_log off;
        allow 172.16.0.0/12;
        allow 192.168.0.0/16;
        allow 10.0.0.0/8;
        allow 127.0.0.1;
        deny all;
        
        add_header Content-Type text/plain;
        add_header Cache-Control "no-cache";
    }
    
    # Robots.txt to prevent indexing in production
    location /robots.txt {
        return 200 "User-agent: *\nDisallow: /\n";
        add_header Content-Type text/plain;
        access_log off;
    }
    
    # Security.txt for responsible disclosure
    location /.well-known/security.txt {
        return 200 "Contact: security@${DOMAIN_NAME}\nExpires: 2025-12-31T23:59:59.000Z\nPreferred-Languages: en\nPolicy: https://${DOMAIN_NAME}/security-policy\n";
        add_header Content-Type text/plain;
        access_log off;
    }
    
    # Block access to sensitive files
    location ~ /\.(ht|git|svn|env) {
        deny all;
        return 404;
    }
    
    # Block access to backup and temporary files
    location ~ \.(backup|bak|tmp|temp|log)$ {
        deny all;
        return 404;
    }
    
    # Custom error pages
    error_page 400 /errors/400.html;
    error_page 401 /errors/401.html;
    error_page 403 /errors/403.html;
    error_page 404 /errors/404.html;
    error_page 500 502 503 504 /errors/50x.html;
    
    location /errors/ {
        root /usr/share/nginx/html;
        internal;
    }
}

# Monitoring subdomain - Grafana, Prometheus, Alertmanager
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name monitoring.${DOMAIN_NAME};
    server_tokens off;
    
    # SSL Certificate configuration (same cert with SAN)
    ssl_certificate /etc/nginx/ssl/live/${DOMAIN_NAME}/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/live/${DOMAIN_NAME}/privkey.pem;
    ssl_trusted_certificate /etc/nginx/ssl/live/${DOMAIN_NAME}/chain.pem;
    
    # Security headers for monitoring
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
    add_header X-Frame-Options SAMEORIGIN always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    
    # Connection limiting
    limit_conn perip 10;
    limit_conn perserver 500;
    
    # Basic authentication for monitoring tools
    auth_basic "Physics Assistant Monitoring";
    auth_basic_user_file /etc/nginx/auth/.htpasswd_monitoring;
    
    # Grafana dashboard
    location / {
        limit_req zone=monitoring burst=30 nodelay;
        
        proxy_pass http://monitoring_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $real_ip;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        
        # WebSocket support for Grafana live features
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_cache_bypass $http_upgrade;
        
        proxy_connect_timeout 30s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }
    
    # Prometheus metrics
    location /prometheus/ {
        limit_req zone=monitoring burst=20 nodelay;
        
        proxy_pass http://prometheus_backend/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $real_ip;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        proxy_connect_timeout 30s;
        proxy_send_timeout 120s;
        proxy_read_timeout 120s;
    }
    
    # Alertmanager
    location /alertmanager/ {
        limit_req zone=monitoring burst=20 nodelay;
        
        proxy_pass http://alertmanager_backend/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $real_ip;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        proxy_connect_timeout 30s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }
    
    # Health check for monitoring
    location /health {
        access_log off;
        auth_basic off;
        return 200 "Physics Assistant Monitoring - Online\n";
        add_header Content-Type text/plain;
    }
}

# Admin status server on port 8080
server {
    listen 8080;
    listen [::]:8080;
    server_name _;
    server_tokens off;
    
    # Restrict access to internal networks only
    allow 172.16.0.0/12;
    allow 192.168.0.0/16;
    allow 10.0.0.0/8;
    allow 127.0.0.1;
    deny all;
    
    # Nginx status with extended metrics
    location /nginx_status {
        stub_status on;
        access_log off;
        add_header Content-Type text/plain;
        add_header Cache-Control "no-cache";
    }
    
    # Upstream status
    location /upstream_status {
        access_log off;
        return 200 "Upstream Status Check\n";
        add_header Content-Type text/plain;
    }
    
    # Configuration check
    location /config_check {
        access_log off;
        return 200 "Nginx Configuration: OK\nTimestamp: $time_iso8601\nPID: $pid\nWorker Connections: $connections_active/$connections_reading/$connections_writing/$connections_waiting\n";
        add_header Content-Type text/plain;
    }
}